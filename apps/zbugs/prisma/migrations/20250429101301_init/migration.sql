-- CreateTable
CREATE TABLE "comment" (
    "id" VARCHAR NOT NULL,
    "issueID" VARCHAR,
    "created" DOUBLE PRECISION,
    "body" TEXT NOT NULL,
    "creatorID" VARCHAR,

    CONSTRAINT "comment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "emoji" (
    "id" VARCHAR NOT NULL,
    "value" VARCHAR NOT NULL,
    "annotation" VARCHAR,
    "subjectID" VARCHAR NOT NULL,
    "creatorID" VARCHAR,
    "created" DOUBLE PRECISION DEFAULT (EXTRACT(epoch FROM CURRENT_TIMESTAMP) * (1000)::numeric),

    CONSTRAINT "emoji_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "issue" (
    "id" VARCHAR NOT NULL,
    "shortID" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 3000),
    "title" VARCHAR(128) NOT NULL,
    "open" BOOLEAN NOT NULL,
    "modified" DOUBLE PRECISION DEFAULT (EXTRACT(epoch FROM CURRENT_TIMESTAMP) * (1000)::numeric),
    "created" DOUBLE PRECISION DEFAULT (EXTRACT(epoch FROM CURRENT_TIMESTAMP) * (1000)::numeric),
    "creatorID" VARCHAR NOT NULL,
    "assigneeID" VARCHAR,
    "description" VARCHAR(10240) DEFAULT '',
    "visibility" VARCHAR NOT NULL DEFAULT 'public',
    "testJson" JSONB DEFAULT '{}',

    CONSTRAINT "issue_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "issueLabel" (
    "labelID" VARCHAR NOT NULL,
    "issueID" VARCHAR NOT NULL,

    CONSTRAINT "issueLabel_pkey" PRIMARY KEY ("labelID","issueID")
);

-- CreateTable
CREATE TABLE "label" (
    "id" VARCHAR NOT NULL,
    "name" VARCHAR NOT NULL,

    CONSTRAINT "label_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "user" (
    "id" VARCHAR NOT NULL,
    "login" VARCHAR NOT NULL,
    "name" VARCHAR,
    "avatar" VARCHAR,
    "role" VARCHAR NOT NULL DEFAULT 'user',
    "githubID" INTEGER NOT NULL,

    CONSTRAINT "user_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "userPref" (
    "key" VARCHAR NOT NULL,
    "value" VARCHAR NOT NULL,
    "userID" VARCHAR NOT NULL,

    CONSTRAINT "userPref_pkey" PRIMARY KEY ("userID","key")
);

-- CreateTable
CREATE TABLE "viewState" (
    "userID" VARCHAR NOT NULL,
    "issueID" VARCHAR NOT NULL,
    "viewed" DOUBLE PRECISION,

    CONSTRAINT "viewState_pkey" PRIMARY KEY ("userID","issueID")
);

-- CreateIndex
CREATE INDEX "comment_issueid_idx" ON "comment"("issueID");

-- CreateIndex
CREATE INDEX "emoji_created_idx" ON "emoji"("created");

-- CreateIndex
CREATE INDEX "emoji_subject_id_idx" ON "emoji"("subjectID");

-- CreateIndex
CREATE UNIQUE INDEX "emoji_subjectID_creatorID_value_key" ON "emoji"("subjectID", "creatorID", "value");

-- CreateIndex
CREATE INDEX "issue_created_idx" ON "issue"("created");

-- CreateIndex
CREATE INDEX "issue_modified_idx" ON "issue"("modified");

-- CreateIndex
CREATE INDEX "issue_open_modified_idx" ON "issue"("open", "modified");

-- CreateIndex
CREATE INDEX "issueLabel_issueid_idx" ON "issueLabel"("issueID");

-- CreateIndex
CREATE UNIQUE INDEX "user_login_idx" ON "user"("login");

-- CreateIndex
CREATE UNIQUE INDEX "user_githubid_idx" ON "user"("githubID");

-- AddForeignKey
ALTER TABLE "comment" ADD CONSTRAINT "comment_creatorID_fkey" FOREIGN KEY ("creatorID") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION;

-- AddForeignKey
ALTER TABLE "comment" ADD CONSTRAINT "comment_issueID_fkey" FOREIGN KEY ("issueID") REFERENCES "issue"("id") ON DELETE CASCADE ON UPDATE NO ACTION;

-- AddForeignKey
ALTER TABLE "emoji" ADD CONSTRAINT "emoji_creatorID_fkey" FOREIGN KEY ("creatorID") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION;

-- AddForeignKey
ALTER TABLE "emoji" ADD CONSTRAINT "emoji_subject_id_issue_idx" FOREIGN KEY ("subjectID") REFERENCES "issue"("id") ON DELETE CASCADE ON UPDATE NO ACTION;

-- AddForeignKey
ALTER TABLE "emoji" ADD CONSTRAINT "emoji_subject_id_comment_idx" FOREIGN KEY ("subjectID") REFERENCES "comment"("id") ON DELETE CASCADE ON UPDATE NO ACTION;

-- AddForeignKey
ALTER TABLE "issue" ADD CONSTRAINT "issue_assigneeID_fkey" FOREIGN KEY ("assigneeID") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION;

-- AddForeignKey
ALTER TABLE "issue" ADD CONSTRAINT "issue_creatorID_fkey" FOREIGN KEY ("creatorID") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION;

-- AddForeignKey
ALTER TABLE "issueLabel" ADD CONSTRAINT "issueLabel_issueID_fkey" FOREIGN KEY ("issueID") REFERENCES "issue"("id") ON DELETE CASCADE ON UPDATE NO ACTION;

-- AddForeignKey
ALTER TABLE "viewState" ADD CONSTRAINT "viewState_issueID_fkey" FOREIGN KEY ("issueID") REFERENCES "issue"("id") ON DELETE RESTRICT ON UPDATE CASCADE;
