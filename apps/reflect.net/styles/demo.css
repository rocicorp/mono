body.custom-cursor {
  cursor: none;
}
body.grab {
  cursor: grab;
}
body.grabbing {
  cursor: grabbing;
}

#intro > * {
  user-select: none;
}

#intro {
  /* create a little extra space at bottom of intro for playing the puzzle */
  margin-bottom: -50px;
  padding-bottom: 50px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

#intro .featuredStatement {
  text-align: center;
}

.title {
  margin: 0 auto 1.5rem;
  padding-right: 0px;
  padding-left: 0px;
  font-size: 96px;
  line-height: 96px;
  font-weight: 800;
  text-align: center;
  letter-spacing: -2px;
  text-align: center;
}

#demo {
  user-select: none;
  position: relative;
  width: 100%;
}

#wells {
  display: block;
  width: 100%;
  max-width: 568px;
  margin: 0 auto;
}

#back-button {
  display: none;
}

#pieces {
  position: absolute;
  pointer-events: none;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.online-dot {
  width: 14px;
  height: 14px;
  flex-grow: 0;
  flex-shrink: 0;
  margin: 3px 12px 2px 0;
  background-color: #5fc68b;
  border-radius: 50%;
}

.online-dot.offline {
  background-color: #c65f64;
}

#info {
  display: flex;
  margin: 2rem;
  align-items: center;
  justify-content: center;
  opacity: 1;
}

#info > *:not(:first-child) {
  margin-left: 3em;
}

#info * {
  flex-shrink: 0;
}

.demo-active #info {
  opacity: 1;
}

.active-user-info {
  display: flex;
  z-index: 3;
  pointer-events: none;
}

.active-user-info.offline {
  visibility: hidden;
}

#confetti-container {
  display: none;
}

#confetti-container.active {
  display: flex;
  justify-content: space-between;
  position: absolute;
  top: 0;
  left: 10vw;
  right: 0;
  width: 70%;
}

#canvases {
  position: absolute;
  height: 149px;
  width: 422px;
}

.cursor {
  position: absolute;
  pointer-events: none;
  top: 0px;
  left: 0px;
  transform: translate3d(0, 0, 0);
  transition: opacity 0.5s ease-out;
  z-index: 300;
  opacity: 0;
}

.cursor.active {
  opacity: 1;
}

.cursor.local.cursor {
  z-index: 301;
}

.cursor svg {
  /*
  Needed to promote to layer and avoid paints on cursor movement.
  Don't completely understand why this is necessary as the parent
  .cursor element has its own layer and is what is being moved, but
  promoting the svg element as well eliminates paints in Chrome.
   */
  transform: translate3d(0, 0, 0);
  position: absolute;
  left: -1px;
  top: -1px;
  filter: drop-shadow(0px 2px 2px rgba(0, 0, 0, 0.2));
}

.location {
  position: absolute;
  padding: 4px;
  font-weight: 700;
  font-size: 0.8em;
  color: rgba(0, 0, 0, 0.8);
  border-radius: 4px;
  white-space: nowrap;
  left: 12px;
  top: 14px;
  transition:
    top 300ms,
    opacity 100ms;
  transition-timing-function: cubic-bezier(0.46, 0.11, 0.065, 1.65);
  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.2);
}

.bot-indicator {
  position: absolute;
  top: -18px;
  right: -18px;
}

/* On mouse devices, the prompt is completely hidden, the game works by default */
.prompt {
  position: absolute;
  z-index: 350; /* above cursors, below nav */
  display: none;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  opacity: 0;
}

@media (hover: none) {
  /* On touch devices, the prompt starts out completely transparent */
  .prompt {
    display: flex;
    transition: opacity 200ms;
  }
}

/** Then transitions to a semi-transparent backdrop when activated */
.prompt.active {
  opacity: 1;
}

.prompt.enableScreen.active {
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  background-color: rgba(255, 255, 255, 0.6);
}

.prompt > .message {
  padding: 1rem 2rem;
  background-color: rgba(255, 255, 255, 0.91);
  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.25);
  border-radius: 10px;
  white-space: nowrap;
  flex: 0;
  font-size: 0.8rem;
  font-weight: bold;
}

.prompt.enableScreen > .message {
  background-color: rgba(255, 255, 255, 0.5);
  padding: 2.25rem 3.5rem 2rem 3.5rem;
}

.prompt > .message img {
  height: 2.5rem;
  margin-bottom: 1.5rem;
}

#cursor-field {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  /* height set by javascript */
  overflow: hidden;
  pointer-events: none;
}

.piece {
  position: absolute;
  left: 0;
  top: 0;
  pointer-events: all;
  overflow: visible;
  touch-action: none;
  z-index: 2;
}

.piece.placed {
  z-index: 1;
}

.piece.A #shape {
  fill: rgba(252, 73, 171, 0.5);
  stroke: rgba(223, 0, 122, 0.6);
}

.piece.A.placed #shape {
  fill: #fc49ab;
  stroke: #fc49ab;
}

.piece.L #shape {
  fill: rgba(95, 232, 255, 0.5);
  stroke: rgba(0, 197, 229, 0.6);
}

.piece.L.placed #shape {
  fill: #5fe8ff;
  stroke: #5fe8ff;
}

.piece.I #shape {
  fill: rgba(255, 153, 0, 0.5);
  stroke: rgba(211, 127, 0, 0.8);
}

.piece.I.placed #shape {
  fill: #ff9900;
  stroke: #ff9900;
}

.piece.V #shape {
  fill: rgba(213, 5, 232, 0.5);
  stroke: rgba(174, 16, 188, 0.8);
}

.piece.V.placed #shape {
  fill: #d505e8;
  stroke: #d505e8;
}

.piece.E #shape {
  fill: rgba(29, 157, 229, 0.5);
  stroke: rgba(20, 122, 179, 0.8);
}

.piece.E.placed #shape {
  fill: #1d9de5;
  stroke: #1d9de5;
}

.rotation-handle {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  z-index: 201;
  width: 28px;
  height: 28px;
  pointer-events: none;
  touch-action: none;
}

.rotation-handle.active {
  opacity: 1;
}

.rotation-handle.animate {
  transition: opacity 200ms cubic-bezier(0.46, 0.11, 0.065, 1.65);
}

.rotation-handle > div {
  position: absolute;
  width: 28px;
  height: 28px;
  transform: translate3d(0, 0, 0);
}

.rotation-handle.active > div {
  /* 44 because it looks nice */
  /* x axis because it corresponds to zero radians so that when we rotate by radians we get the right position */
  transform: translate3d(44px, 0, 0);
  transition: transform 200ms cubic-bezier(0.46, 0.11, 0.065, 1.65);
  pointer-events: all;
}

.rotation-handle > div > div {
  position: absolute;
  left: 8px;
  top: 8px;
  border: 1px solid #0c8ce9;
  box-shadow: 0px 2px 4px 0px #00000040;
  background-color: white;
  width: 12px;
  height: 12px;
  border-radius: 50%;
}

@media (max-width: 600px) {
  #intro {
    padding-top: 9.5rem;
  }

  #intro .featuredStatement {
    font-size: 1.2rem;
  }
}

@media (max-width: 855px) {
  .title {
    font-size: 10vw;
    line-height: 1;
  }

  @media (orientation: landscape) {
    #intro {
      padding-top: 8.6rem;
    }

    .title {
      line-height: 0.6;
      font-size: 6.6vw;
    }

    #wells {
      max-width: 350px;
    }
  }
}

#intro.gameMode {
  margin: 0;
  padding: 0;
  height: 100vh;
  height: calc(var(--vh, 1vh) * 100);
  user-select: none;
}

#intro.gameMode #title-container {
  margin: 0;
  letter-spacing: 0;
  flex: 0.5;
  display: flex;
  align-items: center;
}

#intro.gameMode #title-container .title {
  margin: 0;
}

#intro.gameMode #demo {
  flex: 1;
  display: flex;
  align-items: center;
}

#intro.gameMode #info {
  margin: 0;
  flex: 0.5;
}

#intro.gameMode #wells {
  max-width: none;
  width: auto;
  /* argh can't get this to just take up available space in flexbox */
  height: 45vh;
}

#intro.gameMode .featuredStatement {
  display: none;
}

#intro.gameMode #back-button {
  display: block;
  position: absolute;
  top: 4vh;
  left: 4vh;
  width: 15vh;
  height: 15vh;
  z-index: 1;
}
