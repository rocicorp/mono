{"id":"mono-upstream-schema-1","title":"Migrate upstream schema from pipe notation to metadata table","description":"Move PostgreSQL schema metadata from embedded pipe-delimited notation in SQLite column types (e.g., 'int8|NOT_NULL') to a dedicated _zero.column_metadata table. This fixes SQLite type affinity issues and makes schema inspection easier.","status":"open","priority":1,"issue_type":"epic","created_at":"2025-10-21T15:46:26.508411-04:00","updated_at":"2025-10-21T15:46:26.508411-04:00"}
{"id":"mono-upstream-schema-10","title":"Update processDropTable() to delete metadata","description":"Modify change-processor.ts:621 processDropTable() to delete all metadata rows for dropped table from _zero.column_metadata.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:46:55.89967-04:00","updated_at":"2025-10-21T15:46:55.89967-04:00","dependencies":[{"issue_id":"mono-upstream-schema-10","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.429687-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-10","depends_on_id":"mono-upstream-schema-4","type":"blocks","created_at":"2025-10-21T15:51:18.933121-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-10","depends_on_id":"mono-upstream-schema-13","type":"blocks","created_at":"2025-10-21T15:51:19.40965-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-11","title":"Update listTables() to read from metadata table with fallback","description":"Modify lite-tables.ts:32 listTables() to check if _zero.column_metadata exists. If yes, JOIN with metadata; if no, parse pipe notation from pragma_table_info. Ensure both paths produce identical output.","status":"open","priority":0,"issue_type":"task","created_at":"2025-10-21T15:46:56.318299-04:00","updated_at":"2025-10-21T15:46:56.318299-04:00","dependencies":[{"issue_id":"mono-upstream-schema-11","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.437484-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-11","depends_on_id":"mono-upstream-schema-4","type":"blocks","created_at":"2025-10-21T15:51:18.941331-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-12","title":"Add metadata sync validation on replica startup","description":"Add validation function that compares _zero.column_metadata with actual pragma_table_info on startup. Detect and log any inconsistencies. Trigger auto-reset if corruption detected.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-21T15:46:56.734192-04:00","updated_at":"2025-10-21T15:46:56.734192-04:00","dependencies":[{"issue_id":"mono-upstream-schema-12","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.445421-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-13","title":"Wrap DDL operations in transactions for atomicity","description":"Ensure all DDL operations in change-processor.ts that modify metadata are properly wrapped in transactions. ALTER TABLE + metadata changes must be atomic.","status":"open","priority":0,"issue_type":"task","created_at":"2025-10-21T15:46:57.149468-04:00","updated_at":"2025-10-21T15:46:57.149468-04:00","dependencies":[{"issue_id":"mono-upstream-schema-13","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.454721-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-14","title":"Write comprehensive tests for Phase 1 dual-write","description":"Test migration v5→v6, all DDL operations write metadata correctly, fallback parsing works, metadata table filtering, transaction atomicity. Est: 15-20 test cases in change-processor.test.ts and lite-tables.test.ts","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:46:57.56961-04:00","updated_at":"2025-10-21T15:46:57.56961-04:00","dependencies":[{"issue_id":"mono-upstream-schema-14","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.46239-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-14","depends_on_id":"mono-upstream-schema-5","type":"blocks","created_at":"2025-10-21T15:51:19.820903-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-14","depends_on_id":"mono-upstream-schema-6","type":"blocks","created_at":"2025-10-21T15:51:19.829462-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-14","depends_on_id":"mono-upstream-schema-7","type":"blocks","created_at":"2025-10-21T15:51:19.837779-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-14","depends_on_id":"mono-upstream-schema-8","type":"blocks","created_at":"2025-10-21T15:51:19.846054-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-14","depends_on_id":"mono-upstream-schema-9","type":"blocks","created_at":"2025-10-21T15:51:19.854637-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-14","depends_on_id":"mono-upstream-schema-10","type":"blocks","created_at":"2025-10-21T15:51:19.863113-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-14","depends_on_id":"mono-upstream-schema-11","type":"blocks","created_at":"2025-10-21T15:51:19.871454-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-14","depends_on_id":"mono-upstream-schema-12","type":"blocks","created_at":"2025-10-21T15:51:19.879632-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-15","title":"Phase 2: Read-Only Metadata (Version 7)","description":"Stop writing pipe notation to new tables. All reads use metadata table. Old tables still have pipe notation. Migration backfills any missing metadata. Deploy ~6 months after Phase 1.","status":"open","priority":1,"issue_type":"feature","created_at":"2025-10-21T15:47:27.406862-04:00","updated_at":"2025-10-21T15:47:27.406862-04:00","dependencies":[{"issue_id":"mono-upstream-schema-15","depends_on_id":"mono-upstream-schema-1","type":"parent-child","created_at":"2025-10-21T15:51:05.779112-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-15","depends_on_id":"mono-upstream-schema-2","type":"blocks","created_at":"2025-10-21T15:51:06.227847-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-16","title":"Remove pipe notation writing from createLiteTableStatement()","description":"Modify create.ts:32 createLiteTableStatement() and liteColumnDef() to generate plain SQLite types without pipe notation (e.g., 'INTEGER' instead of 'int8|NOT_NULL').","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:27.835476-04:00","updated_at":"2025-10-21T15:47:27.835476-04:00","dependencies":[{"issue_id":"mono-upstream-schema-16","depends_on_id":"mono-upstream-schema-15","type":"parent-child","created_at":"2025-10-21T15:51:30.995203-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-16","depends_on_id":"mono-upstream-schema-18","type":"blocks","created_at":"2025-10-21T15:51:31.44678-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-17","title":"Remove pipe notation from all ALTER TABLE ADD COLUMN","description":"Modify change-processor.ts processAddColumn() and processUpdateColumn() to generate plain SQLite types without pipe notation.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:28.248368-04:00","updated_at":"2025-10-21T15:47:28.248368-04:00","dependencies":[{"issue_id":"mono-upstream-schema-17","depends_on_id":"mono-upstream-schema-15","type":"parent-child","created_at":"2025-10-21T15:51:31.00396-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-17","depends_on_id":"mono-upstream-schema-18","type":"blocks","created_at":"2025-10-21T15:51:31.455497-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-18","title":"Add migration v7 to backfill missing metadata","description":"Create migration that scans all tables, checks for columns not in metadata table, parses their pipe notation, and inserts into metadata. Handles mixed old/new tables.","status":"open","priority":0,"issue_type":"task","created_at":"2025-10-21T15:47:28.664383-04:00","updated_at":"2025-10-21T15:47:28.664383-04:00","dependencies":[{"issue_id":"mono-upstream-schema-18","depends_on_id":"mono-upstream-schema-15","type":"parent-child","created_at":"2025-10-21T15:51:31.012056-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-19","title":"Update listTables() to prefer metadata over pipe parsing","description":"Modify listTables() to always read from metadata table first. Only parse pipe notation if metadata row is missing for a specific column (defensive coding).","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:29.08511-04:00","updated_at":"2025-10-21T15:47:29.08511-04:00","dependencies":[{"issue_id":"mono-upstream-schema-19","depends_on_id":"mono-upstream-schema-15","type":"parent-child","created_at":"2025-10-21T15:51:31.020276-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-2","title":"Phase 1: Dual-Write (Version 6)","description":"Implement dual-write mode where metadata is written to both the new metadata table AND the old pipe notation format. This allows safe rollback to version 5.","status":"open","priority":1,"issue_type":"feature","created_at":"2025-10-21T15:46:52.561865-04:00","updated_at":"2025-10-21T15:46:52.561865-04:00","dependencies":[{"issue_id":"mono-upstream-schema-2","depends_on_id":"mono-upstream-schema-1","type":"parent-child","created_at":"2025-10-21T15:51:05.76945-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-20","title":"Write tests for Phase 2 mixed schema scenarios","description":"Test scenarios: old tables with pipe notation, new tables without, migration v6→v7, backfill logic, metadata-first reads. Est: 10 test cases.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:29.543648-04:00","updated_at":"2025-10-21T15:47:29.543648-04:00","dependencies":[{"issue_id":"mono-upstream-schema-20","depends_on_id":"mono-upstream-schema-15","type":"parent-child","created_at":"2025-10-21T15:51:31.028419-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-20","depends_on_id":"mono-upstream-schema-16","type":"blocks","created_at":"2025-10-21T15:51:31.46375-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-20","depends_on_id":"mono-upstream-schema-17","type":"blocks","created_at":"2025-10-21T15:51:31.472003-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-20","depends_on_id":"mono-upstream-schema-19","type":"blocks","created_at":"2025-10-21T15:51:31.479996-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-21","title":"Phase 3: Remove Pipe Notation (Version 8)","description":"Complete removal of pipe notation parsing code. All tables use plain SQLite types. Metadata table is single source of truth. Deploy ~1 year after Phase 1.","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-21T15:47:30.013201-04:00","updated_at":"2025-10-21T15:47:30.013201-04:00","dependencies":[{"issue_id":"mono-upstream-schema-21","depends_on_id":"mono-upstream-schema-1","type":"parent-child","created_at":"2025-10-21T15:51:05.786791-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-21","depends_on_id":"mono-upstream-schema-15","type":"blocks","created_at":"2025-10-21T15:51:06.236721-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-22","title":"Remove all pipe notation parsing functions","description":"Delete upstreamDataType(), nullableUpstream(), isEnum(), isArray() functions from types/lite.ts:185-219. Remove TEXT_ENUM_ATTRIBUTE, NOT_NULL_ATTRIBUTE, TEXT_ARRAY_ATTRIBUTE constants.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:30.500179-04:00","updated_at":"2025-10-21T15:47:30.500179-04:00","dependencies":[{"issue_id":"mono-upstream-schema-22","depends_on_id":"mono-upstream-schema-21","type":"parent-child","created_at":"2025-10-21T15:51:31.893632-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-22","depends_on_id":"mono-upstream-schema-25","type":"blocks","created_at":"2025-10-21T15:51:32.359158-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-23","title":"Remove pipe notation handling from liteColumnDef()","description":"Remove legacy |TEXT_ARRAY handling from create.ts:4-27 liteColumnDef(). Simplify logic since types are now plain SQLite types.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:30.923401-04:00","updated_at":"2025-10-21T15:47:30.923401-04:00","dependencies":[{"issue_id":"mono-upstream-schema-23","depends_on_id":"mono-upstream-schema-21","type":"parent-child","created_at":"2025-10-21T15:51:31.90209-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-23","depends_on_id":"mono-upstream-schema-25","type":"blocks","created_at":"2025-10-21T15:51:32.368111-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-24","title":"Remove fallback parsing from listTables()","description":"Remove fallback pipe parsing logic from listTables(). Function now only reads from _zero.column_metadata table. Fail if metadata missing.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:31.397971-04:00","updated_at":"2025-10-21T15:47:31.397971-04:00","dependencies":[{"issue_id":"mono-upstream-schema-24","depends_on_id":"mono-upstream-schema-21","type":"parent-child","created_at":"2025-10-21T15:51:31.910487-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-24","depends_on_id":"mono-upstream-schema-25","type":"blocks","created_at":"2025-10-21T15:51:32.376412-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-25","title":"Add migration v8 to validate all metadata present","description":"Migration that validates every column has metadata. If any missing, trigger AutoResetSignal to force full re-sync from upstream PostgreSQL.","status":"open","priority":0,"issue_type":"task","created_at":"2025-10-21T15:47:31.814869-04:00","updated_at":"2025-10-21T15:47:31.814869-04:00","dependencies":[{"issue_id":"mono-upstream-schema-25","depends_on_id":"mono-upstream-schema-21","type":"parent-child","created_at":"2025-10-21T15:51:31.918605-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-26","title":"Update all tests to remove pipe notation assertions","description":"Update test files: create.pg.test.ts, lite-tables.test.ts, replication-status.test.ts to remove pipe notation from expected values. Update to use plain SQLite types.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:32.25114-04:00","updated_at":"2025-10-21T15:47:32.25114-04:00","dependencies":[{"issue_id":"mono-upstream-schema-26","depends_on_id":"mono-upstream-schema-21","type":"parent-child","created_at":"2025-10-21T15:51:31.926584-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-26","depends_on_id":"mono-upstream-schema-22","type":"blocks","created_at":"2025-10-21T15:51:32.384422-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-26","depends_on_id":"mono-upstream-schema-23","type":"blocks","created_at":"2025-10-21T15:51:32.392433-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-26","depends_on_id":"mono-upstream-schema-24","type":"blocks","created_at":"2025-10-21T15:51:32.400291-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-27","title":"Write tests for Phase 3 metadata-only operation","description":"Test that system works entirely from metadata, no pipe parsing code paths executed, proper errors when metadata missing. Est: 5 test cases.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:32.678872-04:00","updated_at":"2025-10-21T15:47:32.678872-04:00","dependencies":[{"issue_id":"mono-upstream-schema-27","depends_on_id":"mono-upstream-schema-21","type":"parent-child","created_at":"2025-10-21T15:51:31.934656-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-27","depends_on_id":"mono-upstream-schema-22","type":"blocks","created_at":"2025-10-21T15:51:32.408223-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-27","depends_on_id":"mono-upstream-schema-23","type":"blocks","created_at":"2025-10-21T15:51:32.416398-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-27","depends_on_id":"mono-upstream-schema-24","type":"blocks","created_at":"2025-10-21T15:51:32.42435-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-28","title":"Add performance benchmarks for metadata table reads","description":"Create benchmarks comparing listTables() performance with metadata table JOIN vs pipe parsing. Measure impact on query compilation time. Target: \u003c5% overhead.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-21T15:47:46.479604-04:00","updated_at":"2025-10-21T15:47:46.479604-04:00"}
{"id":"mono-upstream-schema-29","title":"Implement metadata caching in SchemaInfo","description":"Add in-memory cache of metadata table contents, invalidated by #bumpVersions(). Reduces repeated JOINs during query compilation. Measure performance improvement.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-21T15:47:46.955266-04:00","updated_at":"2025-10-21T15:47:46.955266-04:00","dependencies":[{"issue_id":"mono-upstream-schema-29","depends_on_id":"mono-upstream-schema-28","type":"related","created_at":"2025-10-21T15:51:37.889259-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-3","title":"Design and create _zero.column_metadata table schema","description":"Create table: _zero.column_metadata with columns: table_name, column_name, upstream_type, is_not_null, is_enum, is_array, array_dimensions, character_max_length, position. Include primary key and index. Location: packages/zero-cache/src/services/change-source/replica-schema.ts","status":"in_progress","priority":0,"issue_type":"task","created_at":"2025-10-21T15:46:52.997605-04:00","updated_at":"2025-10-21T16:00:45.804636-04:00","dependencies":[{"issue_id":"mono-upstream-schema-3","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.372007-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-30","title":"Add monitoring for metadata sync failures","description":"Add OpenTelemetry metrics/logs for: metadata validation failures, missing metadata rows, migration errors. Alert on corruption detected.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-21T15:47:47.418339-04:00","updated_at":"2025-10-21T15:47:47.418339-04:00"}
{"id":"mono-upstream-schema-31","title":"Document migration phases and rollback procedures","description":"Write documentation explaining 3-phase migration, how to monitor progress, rollback procedures for each phase, troubleshooting guide for metadata corruption.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:47.864221-04:00","updated_at":"2025-10-21T15:47:47.864221-04:00","dependencies":[{"issue_id":"mono-upstream-schema-31","depends_on_id":"mono-upstream-schema-14","type":"blocks","created_at":"2025-10-21T15:51:37.897841-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-32","title":"Add integration tests for rolling deployment scenarios","description":"Test mixed version scenarios: old zero-cache reading new replica (should work with metadata table), new zero-cache reading old replica (should fallback to pipe parsing). Simulate rolling deployment.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:47:48.282297-04:00","updated_at":"2025-10-21T15:47:48.282297-04:00","dependencies":[{"issue_id":"mono-upstream-schema-32","depends_on_id":"mono-upstream-schema-11","type":"blocks","created_at":"2025-10-21T15:51:37.905863-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-32","depends_on_id":"mono-upstream-schema-13","type":"blocks","created_at":"2025-10-21T15:51:37.913853-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-4","title":"Add metadata table creation to replica schema migration","description":"Add migration v6 to schemaVersionMigrationMap in replica-schema.ts that creates _zero.column_metadata table and populates it from existing pipe notation in all tables using listTables().","status":"open","priority":0,"issue_type":"task","created_at":"2025-10-21T15:46:53.405201-04:00","updated_at":"2025-10-21T15:46:53.405201-04:00","dependencies":[{"issue_id":"mono-upstream-schema-4","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.380998-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-4","depends_on_id":"mono-upstream-schema-3","type":"blocks","created_at":"2025-10-21T15:51:18.883753-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-5","title":"Update processCreateTable() to write metadata","description":"Modify change-processor.ts:527 processCreateTable() to insert metadata rows for each column into _zero.column_metadata after creating the table (while still writing pipe notation).","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:46:53.830918-04:00","updated_at":"2025-10-21T15:46:53.830918-04:00","dependencies":[{"issue_id":"mono-upstream-schema-5","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.389295-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-5","depends_on_id":"mono-upstream-schema-4","type":"blocks","created_at":"2025-10-21T15:51:18.892502-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-5","depends_on_id":"mono-upstream-schema-13","type":"blocks","created_at":"2025-10-21T15:51:19.365964-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-6","title":"Update processRenameTable() to update metadata","description":"Modify change-processor.ts:535 processRenameTable() to update table_name in _zero.column_metadata for all affected rows.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:46:54.242181-04:00","updated_at":"2025-10-21T15:46:54.242181-04:00","dependencies":[{"issue_id":"mono-upstream-schema-6","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.3969-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-6","depends_on_id":"mono-upstream-schema-4","type":"blocks","created_at":"2025-10-21T15:51:18.900442-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-6","depends_on_id":"mono-upstream-schema-13","type":"blocks","created_at":"2025-10-21T15:51:19.375549-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-7","title":"Update processAddColumn() to write metadata","description":"Modify change-processor.ts:545 processAddColumn() to insert metadata row for new column into _zero.column_metadata (while still writing pipe notation).","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:46:54.652137-04:00","updated_at":"2025-10-21T15:46:54.652137-04:00","dependencies":[{"issue_id":"mono-upstream-schema-7","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.404637-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-7","depends_on_id":"mono-upstream-schema-4","type":"blocks","created_at":"2025-10-21T15:51:18.908831-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-7","depends_on_id":"mono-upstream-schema-13","type":"blocks","created_at":"2025-10-21T15:51:19.384257-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-8","title":"Update processUpdateColumn() to update metadata","description":"Modify change-processor.ts:557 processUpdateColumn() to update metadata rows when column type changes or column is renamed (handle both scenarios).","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:46:55.066369-04:00","updated_at":"2025-10-21T15:46:55.066369-04:00","dependencies":[{"issue_id":"mono-upstream-schema-8","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.413505-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-8","depends_on_id":"mono-upstream-schema-4","type":"blocks","created_at":"2025-10-21T15:51:18.916794-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-8","depends_on_id":"mono-upstream-schema-13","type":"blocks","created_at":"2025-10-21T15:51:19.393426-04:00","created_by":"mlaw"}]}
{"id":"mono-upstream-schema-9","title":"Update processDropColumn() to delete metadata","description":"Modify change-processor.ts:612 processDropColumn() to delete metadata row for dropped column from _zero.column_metadata.","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-21T15:46:55.480347-04:00","updated_at":"2025-10-21T15:46:55.480347-04:00","dependencies":[{"issue_id":"mono-upstream-schema-9","depends_on_id":"mono-upstream-schema-2","type":"parent-child","created_at":"2025-10-21T15:51:18.421423-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-9","depends_on_id":"mono-upstream-schema-4","type":"blocks","created_at":"2025-10-21T15:51:18.924632-04:00","created_by":"mlaw"},{"issue_id":"mono-upstream-schema-9","depends_on_id":"mono-upstream-schema-13","type":"blocks","created_at":"2025-10-21T15:51:19.401506-04:00","created_by":"mlaw"}]}
